{
    "home": "",
    "1": "Setup a simple Angular project with a command line. Change the default text of the 'app/src/app.component.html' to 'Hello World'. Change the app title to 'My-Ng', Change the default favicon by downloading the image from the provided link. Understand concepts like (i) folder structure, (ii) important Angular project specific config files, (iii) Bootstrapping process, (iv) ng-cli commands like 'ng serve', 'ng generate'.",
    "2": "In the above Angular app create a new component 'Home' using 'ng generate' and define a selector as <my-home> using an inline template. Specify your name in the HTML paragraph tag in the template.",
    "3": "Modify the above code to use a template defined within a separate HTML view file.",
    "4": "In the above Angular app specify the text color and font size through the '.scss' file by defining a class for text defined in the 'Home' component.",
    "5": "Extend the above app and define 2 class properties as 'profileImg' and 'username' with default values in the 'home' component. The 'profileImg' should refer to an static image url from 'src/assets/img' folder. Create an external HTML view template to display the 'username' with interpolations as 'Greetings ! <username>' followed by a user profile image i.e 'profileImg' with property binding.",
    "6": "Modify the above app and add a new button in the HTML template with a label as 'Display Profile'. The Html template will show only 'Greetings <username>' and no profile image. Create a click event on the button with function name as 'displayProfile()'. Display the profile image when the user clicks on the 'Display Profile' button.",
    "7": "In the above Angular application create an injectable service 'Logger' through cli, define a function 'log(msg)' in the file. This function will output the message in the browser console. Inject this service in the 'Home' component. Call the log('Using a logger service') function in the constructor of the 'home' component.",
    "8": "Create a simple Angular application to demonstrate all the Lifecycle Hooks for a Component. Design a new page with name 'LifeCycle' which should display the message on browser console as '<life cycle name> is called' for each of the life cycle events in the order in which it occurs. E.g. 'ngOnInit is called'. Use the Logger service created in the previous assignment.",
    "9": "In the above assignment modify the 'log(msg)' function. The log message will be sent to the browser console only when production mode is disabled within the 'src/environments/environment.ts' file.",
    "10": "Create a routing enabled Angular app to demonstrate the routing between 2 static components. Create one component named as 'First' and another named as 'Second'. Define the routes for the 2 components using the 'Routes' array. Add the route links in the 'app' component with '<routesLink>'. Lastly add '<router-outlet></router-outlet>' to render the components for the selected route.",
    "11": "Extend the above app to define a new 'PageNotFound' component. Update the 'Routes' array to add this new component to setup wildcard routing.",
    "12": "Modify the above app to include a parameterized route. The 'First' component can be routed as [routerLink]='['/first', { name: 'yourname' }] and second as '[routerLink]='['/second/2']'. Using 'ActivatedRoute' & 'ParamMap' displays the value of the parameter passed in the url in the respective components. Component 'First' would display 'Greeting ! <name>' and Component 'Second' would display 'The identity value is 2'.",
    "13": "Modify the above app to demonstrate routing using lazy loading.",
    "14": "Define 2 new properties in the environment file as 'appVersion' with value as 'v0.0.1' and appReleaseDate with date in 'dd Month, YYYY' format. Design a footer view in the 'app' component in the previous app and bind these two new environment properties in the footer at bottom right corner to display as E.g. 'v0.0.1 (29 Feb, 2022)'.",
    "15": "Create a tabbed based angular app. Design the tab using 'bootstrap', do not use angular material components. Name the tab as below\na. Java\nb. Angular\nc. SQL\nFor each of the above tabs, when selected, display the content copied from the relevant page from Wikipedia. The length of the content should be long enough to display the scrollbar.",
    "16": "Create a simple Angular project. Modify the 'app' component to create a simple form for 2 input fields to accept numbers and 2 buttons named as 'Add' and 'Reset'. Clicking on the 'Add' button should display the result in the footer section as 'Sum of n1 and n2 is (n1+n2)'.The form should be well designed and formatted.",
    "17": "Extend the above app to add two components, one for ngIf and another for ngSwitch. (i) Create a component named 'DirectiveDemoIf'. The component should accept a number input field to accept user input and a button 'Find'. Clicking on the 'Find' button should show if the entered number is even or odd using 'ngIf'. (ii) Create a component named 'DirectiveDemoSwitch' to demo the same functionality using 'ngSwitch' instead of 'ngIf'.",
    "18": "Extend the above app and create a new component named 'DirectiveDemoFor'. Create a book JSON array of objects as below in class 'book.ts'\n[{\n\ttitle: 'book1',\n\tdescription: 'book desc 1'\n}, {\n\ttitle: 'book2',\n\tdescription: 'book desc 2'\n}, {\n\ttitle: 'book3',\n\tdescription: 'book desc 3'\n}, {\n\ttitle: 'book4',\n\tdescription: 'book desc 4 ' \n}]; Using 'ngFor', display the book details in the form of cards using the external HTML template.",
    "19": "Create an angular app to pass the data from parent component to 'child' component. Considering the above assignment's JSON data structure, display the book's details by passing the value from the app component to a newly created child component using @Input decorator.",
    "20": "Extend the above app to send data back to the parent component. Create a button in the 'child' component as 'Rate the book'. When the button is clicked a random number between 1-10 would be generated and passed (emitted) back to the parent. The parent component will show an alert message like 'Rating for <title> is 7'.",
    "21": "Create a simple Angular application and design a 'Calendar' Component which will accept the year as input and have a button named 'Show'. Once the user clicks the 'Show' button the following output will be generated.\na. Leap year: Yes/No\nb. Number of days: 365 or 366\nc. Total number of holidays. Consider all Saturdays and Sundays within the...",
    "22": "Create an Angular application for creating * pyramid. The “app” component will have 1 input field to accept the number of rows and a button named “Generate”. Following example shows a pyramid when n = 3",
    "23": "Create an Angular app to demonstrate predefined pipes available within CommonModule by defining required class properties and default values. UpperCasePipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, DatePipe etc."
  }
   